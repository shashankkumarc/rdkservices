{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "UsbAccess API",
        "class": "UsbAccess",
        "description": "The `UsbAccess` plugin provides the ability to examine the contents on a USB drive and access the content through HTTP URLs."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
 
    },
    "methods": {
        "clearLink": {
            "summary": "Clears or removes the symbolic link created by the `createLink` method.",
            "params": {
                "type":"object",
                "properties": {
                    "baseURL": {
                        "summary": "baseURL refers to the web server URL returned by createLink API that points to the symbolic link. If no parameter is given, then http://localhost:50050/usbdrive will be cleared",
                        "type":"string",
                        "example": "http:\/\/localhost:50050\/usbdrive"
                    }
                },
                "required": []
            },
            "result": {
                "type": "object",
                "properties": {
                    "success":{
                        "$ref": "#/common/success"
                    },
                    "error":{
                        "summary": "An error message in case of a failure",
                        "type": "string",
                        "example": "could not remove symlink"
                    }
                },
                "required": [
                    "success"
                ]
            }
        },
        "createLink": {
            "summary": "Creates a symbolic link to the root folder of the USB drive. If called, and a link already exists, then it errors out. Symbolic link has read-only access. Use the name `usbdrive`.",
            "params": {
                "type":"object",
                "properties": {
                    "path": {
                        "summary": "path refers to the root folder of the mounted USB Drive as returned by getMounted API. If no parameter is given, then the first USB drive returned by getMounted API will be used",
                        "type":"string",
                        "example": "\/run\/media\/sda1"
                    }
                },
                "required": []
            },
            "result": {
                "type": "object",
                "properties": {
                    "baseURL": {
                        "summary": "The URL of the web server that points to this location",
                        "type": "string",
                        "example": "http://localhost/usbdrive"
                    },
                    "success": {
                        "$ref": "#/common/success"
                    },
                    "error": {
                        "summary": "An error message in case of a failure",
                        "type": "string",
                        "example": "could not create symlink OR symlink already exists: http://localhost/usbdrive"
                    }
                },
                "required": [
                    "baseURL",
                    "success"
                ]
            }
        },
        "getLinks": {
            "summary": "Returns a list of created links and the associated root folder of the USB drive.",
            "result": {
                "type": "object",
                "properties": {
                    "links": {
                        "summary": "The list of links and associated baseURL paths (empty if there are no results)",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "path": {
                                    "summary": "The root folder of the mounted USB Drive as returned by getMounted API",
                                    "type": "string",
                                    "example": "/run/media/sda1"
                                },
                                "baseURL": {
                                    "summary": "The URL of the web server that points to the path as returned by createLink",
                                    "type": "string",
                                    "example": "http://localhost/usbdrive"
                                }
                            },
                            "required": [
                                "path",
                                "baseURL"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "links",
                    "success"
                ]
            }
        },
         "getAvailableFirmwareFiles": {
            "summary": "Gets a list of firmware files on the device. These files should start with the PMI or model number for that device and end with `.bin`. For example `HSTP11MWR_4.11p5s1_VBN_sdy.bin`.  \nFirmware files are scanned in the root directories. If multiple USB devices are found, then the available firmware files are checked and listed from each device.",
            "result": {
                "type": "object",
                "properties": {
                    "availableFirmwareFiles": {
                        "summary": "The list of firmware files including the full path name",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "/tmp/usbmnts/sda1/HSTP11MWR_4.11p5s1_VBN_sdy.bin"
                            
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "availableFirmwareFiles",
                    "success"
                ]
            }
        },
        "getFileList": {
            "summary": "Gets a list of files and folders from the specified directory or path.",
            "params": {
                "type":"object",
                "properties": {
                    "path": {
                        "summary": "The directory name for which the contents are listed. It supports relative and absolute paths. Any path names starting with / will be checked to see if starts with any of the root folder mounted paths returned by getMounted API. If it matches, it will be considered absolute path and used to retrieve the list of files. If path starting with / doesn't match any of the root folder mounted paths returned by getMounted API, then it is considered relative path from the root folder of the first USB drive returned by getMounted API. If no value is specified, then the contents of the root folder of the first USB drive returned by getMounted API are listed",
                        "type": "string",
                        "example": "\/run\/media\/sda1\/logs\/PreviousLogs"
                    }
                },
                "required": []
            },
            "result": {
                "type": "object",
                "properties": {
                    "path": {
                        "summary": "Absolute path for which the contents are returned",
                        "type":"string",
                        "example": "\/run\/media\/sda1\/logs\/PreviousLogs"
                    },
                    "contents": {
                        "summary": "A list of files and directories (empty if there are no results)",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "summary": "the name of the file or directory",
                                    "type": "string",
                                    "example": "img1.jpg"
                                },
                                "t": {
                                    "summary": "The type. Either `d` for directory or `f` for file",
                                    "type": "string",
                                    "example": "f"
                                }
                            },
                            "required": [
                                "name",
                                "t"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    },
                    "error": {
                        "summary": "An error message in case of a failure",
                        "type": "string",
                        "example": "no disk"
                    }
                },
                "required": [
                    "path",
                    "contents",
                    "success"
                ]
            }
        },
        "getMounted": {
            "summary": "Returns a list of mounted USB devices.",
                "result": {
                "type": "object",
                "properties": {
                    "mounted": {
                        "summary": "The list of file paths where USB devices are mounted",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "/tmp/usbmnts/sda"
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "mounted",
                    "success"
                ]
            }
        },
        "updateFirmware": {
            "summary": "Updates the firmware using the specified file retrieved from the `getAvailableFirmwareFiles` method.",
            "params": {
                "type":"object",
                "properties": {
                    "fileName": {
                        "summary": "The firmware file path to use for the update",
                        "type": "string",
                        "example": "/tmp/usbmnts/sda/this_is_test.bin"
                    }
                },
                "required": [
                    "filename"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "success": {
                        "$ref": "#/common/success"
                    },
                    "error": {
                        "summary": "An error message in case of a failure",
                        "type": "string",
                        "example": "invalid filename"
                    }
                },
                "required": [
                    "success"
                ]
            }
        },
        "ArchiveLogs":{
            "summary":"Compresses and uploads device logs into attached USB drive from /opt/logs with a name comprises of Mac of the device , date and time in a `tgz` format. For example `18310C696834_Logs_10-13-21-04-42PM.tgz` `(<MAC address>_Logs_<unix epoch time>.tgz)`.Notifies about new messages in a room.",
            "events":{
                "onArchiveLogs" : "Triggered to archive the device logs and returns the status of the archive"
            },
            "params": {
                "type":"object",
                "properties": {
                    "path": {
                        "summary": "path refers to the root folder of the mounted USB Drive as returned by getMounted API. If no parameter is given, then the first USB drive returned by getMounted API will be used",
                        "type":"string",
                        "example": "\/run\/media\/sda1"
                    }
                },
                "required": []
            },
            "result":{
                "type":"object",
                "properties": {
                    "success":{
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "success"
                ]
            }
        }
    },
    "events": {
        "onUSBMountChanged": {
            "summary": "Triggered when a USB drive is mounted or unmounted",
            "params": {
                "type":"object",
                "properties": {
                    "mounted":{
                        "summary": "`true` when the USB device is mounted or `false` when the USB device is unmounted",
                        "type": "boolean",
                        "example": true
                    },
                    "device": {
                        "summary": "The location where the device is mounted",
                        "type": "string",
                        "example": "/dev/sda1"
                    }
                },
                "required": [
                    "mounted",
                    "device"
                ]
            }
        },
        "onArchiveLogs":{
            "summary": "Triggered to archive the device logs and returns the status of the archive.",
            "params": {
                "type":"object",
                "properties": {
                    "error": {
                        "description": "Specifies the status of upload logs",
                        "type":"string",
                        "enum":[
                            "script error",
                            "none",
                            "Locked",
                            "No USB",
                            "Writing Error"
                        ],
                        "example": "none"
                    },
                    "success":{
                        "$ref": "#/common/success"
                    },
                    "path":{
                        "description": "Absolute path on the USB drive where the log is archived. On errors, it's set to empty string (\"\")",
                        "type":"string",
                        "example":"\/run\/media\/sda1\/Log\/5C3400F15492_Logs_12-05-22-10-41PM.tgz"
                    }
                },
                "required":[
                    "error",
                    "success",
                    "path"
                ]
            }
        }
    }
}